# Include guard for the Makefile
ifndef APP_MAKEFILE_
APP_MAKEFILE_=included
# Get the user defined variables, if they specified them
-include config.mk
# Export user variables for the Kbuild file and kernel Makefile
ifdef CROSS_COMPILE
    export CROSS_COMPILE
endif
ifdef ARCH
    export ARCH
endif

# The list of source files for the driver. Export the names to the Kbuild file.
APP_DIR = app
export APP_FILE = matrix_ultility.c
APP_PATHS = $(addprefix $(APP_DIR)/,$(APP_FILE))

export NAME_SHARE_LIBRARY = libmatrix
#app/libamtrix.so
APP_SHARE_LIBRARY = $(NAME_SHARE_LIBRARY).so
#outputs/libmatrix.so
APP_OUTPUT = $(OUTPUT_DIR)/$(NAME_SHARE_LIBRARY).so

.PHONY: app app_clean

app: $(APP_SHARE_LIBRARY) $(APP_OUTPUT)


$(APP_SHARE_LIBRARY): $(APP_PATHS)
	$(CC) -shared -o libmatrix.so -fPIC $(APP_PATHS)

# Compile the driver against the given kernel. The check targets are phony, so
# don't force this target to run because of them.

# Copy the compiled driver to the specified output directory
$(APP_OUTPUT): $(APP_SHARE_LIBRARY) $(OUTPUT_DIR)
	@cp $< $@
	rm -f $(APP_SHARE_LIBRARY)

#  
# Clean up all the files generated by compiling the driver
app_clean:
	rm -f $(APP_OUTPUT)
	
endif # DRIVER_MAKEFILE_